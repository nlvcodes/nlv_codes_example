import '../../globals.css'
import Script from 'next/script'
import { Toaster } from 'sonner'
import { NextIntlClientProvider } from 'next-intl'
import localization from '@/i18n/localization'
import { routing } from '@/i18n/routing'
import { notFound } from 'next/navigation'
import { TypedLocale } from 'payload'
import { getMessages, setRequestLocale } from 'next-intl/server'

export const metadata = {
  title: 'Next.js',
  description: 'Generated by Next.js',
}

export default async function RootLayout({
                                           children,
                                           params,
                                         }: {
  children: React.ReactNode
  params: Promise<{
    locale: TypedLocale
  }>
}) {
  const { locale } = await params
  const currentLocale = localization.locales.find((location) => location.code === locale)
  const direction = currentLocale?.rtl ? 'rtl' : 'ltr'

  if (!routing.locales.includes(locale as any)) {
    notFound()
  }
  setRequestLocale(locale)
  const messages = await getMessages()

  return (
    <html
      lang={locale}
      dir={direction}
    >
    <Script id={'hs-script-loader'} async defer type={'text/javascript'}
            src={`//js.hs-scripts.com/${process.env.HS_PORTAL_ID}.js`} />
    <body>
    <NextIntlClientProvider messages={messages}>
      {children}
      <Toaster />
    </NextIntlClientProvider>
    </body>
    </html>
  )
}

export function generateStaticParams() {
  return routing.locales.map((locale) => ({locale}))
}